// Code generated by MockGen. DO NOT EDIT.
// Source: tik_token.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTikToken is a mock of TikToken interface.
type MockTikToken struct {
	ctrl     *gomock.Controller
	recorder *MockTikTokenMockRecorder
}

// MockTikTokenMockRecorder is the mock recorder for MockTikToken.
type MockTikTokenMockRecorder struct {
	mock *MockTikToken
}

// NewMockTikToken creates a new mock instance.
func NewMockTikToken(ctrl *gomock.Controller) *MockTikToken {
	mock := &MockTikToken{ctrl: ctrl}
	mock.recorder = &MockTikTokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTikToken) EXPECT() *MockTikTokenMockRecorder {
	return m.recorder
}

// CountTokens mocks base method.
func (m *MockTikToken) CountTokens(name, content string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CountTokens", name, content)
	ret0, _ := ret[0].(int)
	return ret0
}

// CountTokens indicates an expected call of CountTokens.
func (mr *MockTikTokenMockRecorder) CountTokens(name, content interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CountTokens", reflect.TypeOf((*MockTikToken)(nil).CountTokens), name, content)
}
